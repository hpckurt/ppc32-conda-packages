context:
  version: "3.4.2"

package:
  name: libffi
  version: ${{ version }}

source:
  url: https://github.com/libffi/libffi/releases/download/v${{ version }}/libffi-${{ version }}.tar.gz
  sha256: 540fb721619a6aba3bdeef7d940d8e9e0e6d2c193595bc243241b77ff9e93620
  patches:
    - 0001-arm64-use-a-dedicated-dylib-for-trampolines-so-it-ca.patch
    - 0002-Add-support-for-ffi_find_closure_for_code_np-on-Appl.patch
    # Windows-specific:
    - 0002-Don-t-define-FFI_COMPLEX_TYPEDEF-ifndef-FFI_TARGET_H.patch  # [win]

build:
  number: 5
  run_exports:
    # good history: https://abi-laboratory.pro/tracker/timeline/libffi/
    #- {{ pin_subpackage('libffi', "x.x") }}

requirements:
  build:
   # - autotools_clang_conda              # [win]
   # - make                               # [unix]
   # - autoconf                           # [unix]
   # - libtool                            # [unix]
   # - patch                              # [unix]
   # - automake                           # [unix]
   # - {{ posix }}texinfo
   # - {{ compiler('c') }}
  host:
  run:

tests:
  #requires:
    #- llvm-tools  # [win]
    #- m2-grep     # [win]
  - script:
    - test -e $PREFIX/lib/libffi${SHLIB_EXT}                       # [not win]
    - test -e $PREFIX/lib/libffi.a                                 # [not win]
    - test -e $PREFIX/include/ffi.h                                # [not win]
    - test -e $PREFIX/include/ffitarget.h                          # [not win]

about:
  homepage: https://sourceware.org/libffi/
  license: MIT
  license_file: LICENSE
  summary: A Portable Foreign Function Interface Library.

  description: |
    The libffi library provides a portable, high level programming interface
    to various calling conventions. This allows a programmer to call any
    function specified by a call interface description at run-time.
  documentation: https://sourceware.org/libffi/
  repository: https://github.com/libffi/libffi

extra:
  recipe-maintainers:
    - stefan-balke
    - scopatz
    - isuruf
